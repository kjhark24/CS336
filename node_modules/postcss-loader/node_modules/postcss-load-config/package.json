{
  "name": "postcss-load-config",
  "version": "1.0.0",
  "description": "Autoload Config for PostCSS",
  "engines": {
    "node": ">=0.12",
    "npm": ">=3"
  },
  "main": "index.js",
  "scripts": {
    "lint": "standard",
    "test": "nyc ava test/err/index.js test/pkg/index.js test/rc/index.js test/js/index.js",
    "logs": "standard-changelog > CHANGELOG.md",
    "docs": "jsdoc2md index.js > INDEX.md",
    "clean": "rm -rf .nyc_output coverage jsdoc-api dmd",
    "start": "sudo npm run clean && npm run lint && sudo npm test"
  },
  "dependencies": {
    "cosmiconfig": "^2.1.0",
    "object-assign": "^4.1.0",
    "postcss-load-options": "^1.0.2",
    "postcss-load-plugins": "^2.0.0"
  },
  "devDependencies": {
    "ava": "^0.16.0",
    "coveralls": "^2.11.14",
    "cssnano": "^3.7.7",
    "jsdoc-to-markdown": "^2.0.0",
    "nyc": "^8.3.1",
    "postcss": "^5.2.4",
    "postcss-import": "^8.1.2",
    "postcss-nested": "^1.0.0",
    "postcss-sprites": "^4.0.0",
    "postcss-scss": "^0.3.1",
    "standard": "^8.4.0",
    "sugarss": "^0.2.0"
  },
  "ava": {
    "verbose": "true"
  },
  "nyc": {
    "all": true,
    "include": [
      "index.js"
    ],
    "extension": [
      ".js"
    ]
  },
  "keywords": [
    "postcss",
    "postcss-config"
  ],
  "author": {
    "name": "Michael Ciniawky",
    "email": "michael.ciniawsky@gmail.com"
  },
  "contributors": [
    {
      "name": "Mateusz Derks",
      "url": "http://ertrzyiks.me"
    },
    {
      "name": "Ryan Dunckel",
      "email": "sparty02@gmail.com"
    },
    {
      "name": "Patrick Gilday"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/michael-ciniawsky/postcss-load-config.git"
  },
  "bugs": {
    "url": "https://github.com/michael-ciniawsky/postcss-load-config/issues"
  },
  "homepage": "https://github.com/michael-ciniawsky/postcss-load-config#readme",
  "license": "MIT",
  "readme": "[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![code style][style]][style-url]\n[![chat][chat]][chat-url]\n\n<div align=\"center\">\n  <img width=\"100\" height=\"100\" title=\"Load Options\" src=\"http://michael-ciniawsky.github.io/postcss-load-options/logo.svg\">\n  <a href=\"https://github.com/postcss/postcss\">\n    <img width=\"110\" height=\"110\" title=\"PostCSS\"           src=\"http://postcss.github.io/postcss/logo.svg\" hspace=\"10\">\n  </a>\n  <img width=\"100\" height=\"100\" title=\"Load Plugins\" src=\"http://michael-ciniawsky.github.io/postcss-load-plugins/logo.svg\">\n  <h1>Load Config</h1>\n  <p>Autoload Config for PostCSS<p>\n</div>\n\n<h2 align=\"center\">Install</h2>\n\n```bash\nnpm i -D postcss-load-config\n```\n\n<h2 align=\"center\">Usage</h2>\n\n```\nnpm i -S|-D postcss-plugin\n```\n\nInstall plugins and save them to your ***package.json*** dependencies/devDependencies.\n\n### `package.json`\n\nCreate **`postcss`** section in your projects **`package.json`**.\n\n```\nApp\n  |– client\n  |– public\n  |\n  |- package.json\n```\n\n```json\n{\n  \"postcss\": {\n    \"parser\": \"sugarss\",\n    \"map\": false,\n    \"from\": \"/path/to/src.sss\",\n    \"to\": \"/path/to/dest.css\",\n    \"plugins\": {\n      \"postcss-plugin\": {}\n    }\n  }\n}\n```\n\n### `.postcssrc`\n\nCreate a **`.postcssrc`** file.\n\n```\nApp\n  |– client\n  |– public\n  |\n  |-.postcssrc\n  |- package.json\n```\n\n```json\n{\n  \"parser\": \"sugarss\",\n  \"map\": false,\n  \"from\": \"/path/to/src.sss\",\n  \"to\": \"/path/to/dest.css\",\n  \"plugins\": {\n    \"postcss-plugin\": {}\n  }\n}\n```\n\n### `postcss.config.js`\n\nCreate a **`postcss.config.js`** file.\n\n```\nApp\n  |– client\n  |– public\n  |\n  |- postcss.config.js\n  |- package.json\n```\n\n```js\nmodule.exports = (ctx) => {\n  parser: ctx.sugar ? 'sugarss' : false,\n  map: ctx.env === 'development' ? ctx.map : false,\n  from: ctx.from\n  to: ctx.to\n  plugins: {\n    'postcss-plugin': ctx.plugin\n  }\n}\n```\n\nPlugins can be loaded in either using an `{Object}` or an `{Array}`.\n\n##### `{Object}`\n\n```js\nmodule.exports = (ctx) => {\n  ...options\n  plugins: {\n    'postcss-plugin': ctx.plugin\n  }\n}\n```\n\n##### `{Array}`\n\n```js\nmodule.exports = (ctx) => {\n  ...options\n  plugins: [\n    require('postcss-plugin')(ctx.plugin)\n  ]\n}\n```\n> :warning: When using an Array, make sure to `require()` them.\n\n<h2 align=\"center\">Options</h2>\n\n**`parser`**:\n\n```js\n'parser': 'sugarss'\n```\n\n**`syntax`**:\n\n```js\n'syntax': 'postcss-scss'\n```\n**`stringifier`**:\n\n```js\n'stringifier': 'midas'\n```\n\n[**`map`**:](https://github.com/postcss/postcss/blob/master/docs/source-maps.md)\n\n```js\n'map': 'inline'\n```\n\n**`from`**:\n\n```js\nfrom: 'path/to/src.css'\n```\n\n**`to`**:\n\n```js\nto: 'path/to/dest.css'\n```\n\n<h2 align=\"center\">Plugins</h2>\n\n### Options\n\n**`{} || null`**: Plugin loads with defaults.\n\n```js\n'postcss-plugin': {} || null\n```\n> :warning: `{}` must be an **empty** object\n\n**`[Object]`**: Plugin loads with given options.\n\n```js\n'postcss-plugin': { option: '', option: '' }\n```\n\n**`false`**: Plugin will not be loaded.\n\n```js\n'postcss-plugin': false\n```\n\n### Order\n\nPlugin **order** is determined by declaration in the plugins section.\n\n```js\n{\n  plugins: {\n    'postcss-plugin': {}, // plugins[0]\n    'postcss-plugin': {}, // plugins[1]\n    'postcss-plugin': {}  // plugins[2]\n  }\n}\n```\n\n<h2 align=\"center\">Context</h2>\n\nWhen using a function `(postcss.config.js)`, it is possible to pass context to `postcss-load-config`, which will be evaluated while loading your config. By default `ctx.env (process.env.NODE_ENV)` and `ctx.cwd (process.cwd())` are available.\n\n<h2 align=\"center\">Examples</h2>\n\n**postcss.config.js**\n\n```js\nmodule.exports = (ctx) => {\n  parser: ctx.sugar ? 'sugarss' : false,\n  map: ctx.env === 'development' ? ctx.map : false,\n  from: ctx.from\n  to: ctx.to\n  plugins: {\n    postcss-import: {},\n    postcss-nested: {},\n    cssnano: ctx.env === 'production' ? {} : false\n  }\n}\n```\n\n### <img width=\"80\" height=\"80\" src=\"https://worldvectorlogo.com/logos/nodejs-icon.svg\">\n\n```json\n\"scripts\": {\n  \"build\": \"NODE_ENV=production node postcss\",\n  \"start\": \"NODE_ENV=development node postcss\"\n}\n```\n\n```js\nconst { readFileSync } = require('fs')\n\nconst postcss = require('postcss')\nconst postcssrc = require('postcss-load-config')\n\nconst css = readFileSync('index.sss', 'utf8')\n\nconst ctx = { map: 'inline', from: '/index.sss', to: '/index.css' }\n\npostcssrc(ctx).then(({ plugins, options }) => {\n  postcss(plugins)\n    .process(css, options)\n    .then(({ css }) => console.log(css))\n})\n```\n\n### <img width=\"80\" height=\"80\" src=\"https://worldvectorlogo.com/logos/gulp.svg\">\n\n```json\n\"scripts\": {\n  \"build\": \"NODE_ENV=production gulp\",\n  \"start\": \"NODE_ENV=development gulp\"\n}\n```\n\n```js\nconst { task, src, dest } = require('gulp')\n\nconst postcss = require('gulp-postcssrc')\n\ntask('css', () => {\n  src('src/*.css')\n    .pipe(postcss())\n    .pipe(dest('dest'))\n})\n\ntask('default', ['css'])\n```\n\n### <img width=\"80\" height=\"80\" src=\"https://worldvectorlogo.com/logos/webpack.svg\">\n\n```json\n\"scripts\": {\n  \"build\": \"NODE_ENV=production webpack\",\n  \"start\": \"NODE_ENV=development webpack-dev-server\"\n}\n```\n\n```js\nmodule.exports = (env) => {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/\n        use: [\n          'style-loader',\n          {\n            loader: 'css-loader',\n            options: { importLoaders: 1 } }\n          },\n          'postcss-loader'\n        ]\n      }\n    ]\n  }\n}\n```\n\n<h2 align=\"center\">Maintainers</h2>\n\n<table>\n  <tbody>\n   <tr>\n    <td align=\"center\">\n      <img width=\"150 height=\"150\"\n        src=\"https://avatars.githubusercontent.com/u/5419992?v=3&s=150\">\n      <br />\n      <a href=\"https://github.com/michael-ciniawsky\">Michael Ciniawsky</a>\n    </td>\n    <td align=\"center\">\n      <img width=\"150 height=\"150\"\n        src=\"https://avatars.githubusercontent.com/u/2437969?v=3&s=150\">\n      <br />\n      <a href=\"https://github.com/ertrzyiks\">Mateusz Derks</a>\n    </td>\n  </tr>\n  <tbody>\n</table>\n\n<h2 align=\"center\">Contributors</h2>\n\n<table>\n  <tbody>\n   <tr>\n    <td align=\"center\">\n      <img width=\"150\" height=\"150\"\n        src=\"https://avatars.githubusercontent.com/u/1483538?v=3&s=150\">\n      <br />\n      <a href=\"https://github.com/sparty02\">Ryan Dunckel</a>\n    </td>\n    <td align=\"center\">\n      <img width=\"150\" height=\"150\"\n        src=\"https://avatars.githubusercontent.com/u/6249643?v=3&s=150\">\n      <br />\n      <a href=\"https://github.com/pcgilday\">Patrick Gilday</a>\n    </td>\n  </tr>\n  <tbody>\n</table>\n\n[npm]: https://img.shields.io/npm/v/postcss-load-config.svg\n[npm-url]: https://npmjs.com/package/postcss-load-config\n\n[node]: https://img.shields.io/node/v/postcss-load-plugins.svg\n[node-url]: https://nodejs.org/\n\n[deps]: https://david-dm.org/michael-ciniawsky/postcss-load-config.svg\n[deps-url]: https://david-dm.org/michael-ciniawsky/postcss-load-config\n\n[style]: https://img.shields.io/badge/code%20style-standard-yellow.svg\n[style-url]: http://standardjs.com/\n\n[tests]: http://img.shields.io/travis/michael-ciniawsky/postcss-load-config.svg?branch=master\n[tests-url]: https://travis-ci.org/michael-ciniawsky/postcss-load-config?branch=master\n\n[cover]: https://coveralls.io/repos/github/michael-ciniawsky/postcss-load-config/badge.svg?branch=master\n[cover-url]: https://coveralls.io/github/michael-ciniawsky/postcss-load-config?branch=master\n\n[chat]: https://img.shields.io/gitter/room/postcss/postcss.svg?maxAge=2592000\n[chat-url]: https://gitter.im/postcss/postcss\n",
  "readmeFilename": "README.md",
  "_id": "postcss-load-config@1.0.0",
  "_from": "postcss-load-config@^1.0.0"
}
