{
  "name": "postcss-load-options",
  "version": "1.0.2",
  "description": "Autoload Options for PostCSS",
  "engines": {
    "node": ">=0.12",
    "npm": ">=3"
  },
  "main": "index.js",
  "scripts": {
    "clean": "rm -rf .nyc_output coverage jsdoc-api dmd",
    "lint": "standard",
    "test": "nyc ava test/pkg/index.js test/rc/index.js test/js/index.js",
    "logs": "standard-changelog > CHANGELOG.md",
    "docs": "jsdoc2md index.js lib/options.js > INDEX.md",
    "start": "sudo npm run clean && npm run lint && sudo npm test"
  },
  "dependencies": {
    "cosmiconfig": "^2.1.0",
    "object-assign": "^4.1.0"
  },
  "devDependencies": {
    "ava": "^0.16.0",
    "coveralls": "^2.11.14",
    "jsdoc-to-markdown": "^2.0.0",
    "nyc": "^8.3.1",
    "postcss": "^5.2.4",
    "postcss-scss": "^0.3.1",
    "standard": "^8.4.0",
    "standard-changelog": "0.0.1",
    "sugarss": "^0.2.0"
  },
  "ava": {
    "verbose": "true"
  },
  "nyc": {
    "all": true,
    "include": [
      "lib"
    ],
    "extension": [
      ".js"
    ]
  },
  "keywords": [
    "postcss",
    "postcss-options"
  ],
  "author": {
    "name": "Michael Ciniawky",
    "email": "michael.ciniawsky@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/michael-ciniawsky/postcss-load-options.git"
  },
  "bugs": {
    "url": "https://github.com/michael-ciniawsky/postcss-load-options/issues"
  },
  "homepage": "https://github.com/michael-ciniawsky/postcss-load-options#readme",
  "license": "MIT",
  "readme": "[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![code style][style]][style-url]\n[![chat][chat]][chat-url]\n\n<div align=\"center\">\n  <img width=\"100\" height=\"100\" title=\"Load Options\"\n    src=\"https://michael-ciniawsky.github.io/postcss-load-options/logo.svg\"\n  <a href=\"https://github.com/postcss/postcss\">\n    <img width=\"110\" height=\"110\" title=\"PostCSS\"           src=\"http://postcss.github.io/postcss/logo.svg\" hspace=\"10\">\n  </a>\n  <h1>Load Options</h1>\n  <p>Autoload Options for PostCSS<p>\n</div>\n\n<h2 align=\"center\">Install</h2>\n\n```bash\nnpm i -D postcss-load-options\n```\n<h2 align=\"center\">Usage</h2>\n\n### `package.json`\n\nCreate **`postcss`** section in your projects **`package.json`**.\n\n```\nApp\n  |– client\n  |– public\n  |\n  |- package.json\n```\n\n```json\n{\n  \"dependencies\": {\n    \"sugarss\": \"0.2.0\"\n  },\n  \"postcss\": {\n    \"parser\": \"sugarss\",\n    \"map\": false,\n    \"from\": \"path/to/src/file.css\",\n    \"to\": \"path/to/dest/file.css\"\n  }\n}\n```\n\n### `.postcssrc`\n\nCreate a **`.postcssrc`** file.\n\n```\nApp\n  |– client\n  |– public\n  |\n  |-.postcssrc\n  |- package.json\n```\n\n```json\n{\n  \"parser\": \"sugarss\",\n  \"map\": false,\n  \"from\": \"path/to/src/file.css\",\n  \"to\": \"path/to/dest/file.css\"\n}\n```\n\n### `postcss.config.js`\n\nCreate a **`postcss.config.js`** file.\n\n```\nApp\n  |– client\n  |– public\n  |\n  |- postcss.config.js\n  |- package.json\n```\n\n```js\nmodule.exports = (ctx) => {\n  return {\n    parser: ctx.sugar ? 'sugarss' : false,\n    map: ctx.env === 'development' ? ctx.map || false,\n    from: 'path/to/src/file.css',\n    to: 'path/to/dest/file.css'\n  }\n}\n```\n\n<h2 align=\"center\">Options</h2>\n\n**`parser`**:\n\n```js\n'parser': 'sugarss'\n```\n\n**`syntax`**:\n\n```js\n'syntax': 'postcss-scss'\n```\n**`stringifier`**:\n\n```js\n'stringifier': 'midas'\n```\n\n[**`map`**:](https://github.com/postcss/postcss/blob/master/docs/source-maps.md)\n\n```js\n'map': 'inline'\n```\n\n**`from`**:\n\n```js\nfrom: 'path/to/dest/file.css'\n```\n\n**`to`**:\n\n```js\nto: 'path/to/dest/file.css'\n```\n\n### Context\n\nWhen using a function `(postcss.config.js)`, it is possible to pass context to `postcss-load-options`, which will be evaluated before loading your options. By default `ctx.env (process.env.NODE_ENV)` and `ctx.cwd (process.cwd())` are available.\n\n<h2 align=\"center\">Example</h2>\n\n### <img width=\"80\" height=\"80\" src=\"https://worldvectorlogo.com/logos/nodejs-icon.svg\">\n\n```js\nconst { readFileSync } = require('fs')\n\nconst postcss = require('postcss')\nconst optionsrc = require('postcss-load-options')\n\nconst sss =  readFileSync('index.sss', 'utf8')\n\nconst ctx = { sugar: true,  map: 'inline' }\n\noptionsrc(ctx).then((options) => {\n  postcss()\n    .process(sss, options)\n    .then(({ css }) => console.log(css))\n}))\n```\n\n<h2 align=\"center\">Maintainers</h2>\n\n<table>\n  <tbody>\n   <tr>\n    <td align=\"center\">\n      <img width=\"150 height=\"150\"\n      src=\"https://avatars.githubusercontent.com/u/5419992?v=3&s=150\">\n      <br />\n      <a href=\"https://github.com/michael-ciniawsky\">Michael Ciniawsky</a>\n    </td>\n  </tr>\n  <tbody>\n</table>\n\n\n[npm]: https://img.shields.io/npm/v/postcss-load-options.svg\n[npm-url]: https://npmjs.com/package/postcss-load-options\n\n[node]: https://img.shields.io/node/v/postcss-load-options.svg\n[node-url]: https://nodejs.org/\n\n[deps]: https://david-dm.org/michael-ciniawsky/postcss-load-options.svg\n[deps-url]: https://david-dm.org/michael-ciniawsky/postcss-load-options\n\n[tests]: http://img.shields.io/travis/michael-ciniawsky/postcss-load-options.svg\n[tests-url]: https://travis-ci.org/michael-ciniawsky/postcss-load-options\n\n[cover]: https://coveralls.io/repos/github/michael-ciniawsky/postcss-load-options/badge.svg?branch=master\n[cover-url]: https://coveralls.io/github/michael-ciniawsky/postcss-load-options?branch=master\n\n[style]: https://img.shields.io/badge/code%20style-standard-yellow.svg\n[style-url]: http://standardjs.com/\n\n[chat]: https://img.shields.io/gitter/room/postcss/postcss.svg?maxAge=2592000\n[chat-url]: https://gitter.im/postcss/postcss\n",
  "readmeFilename": "README.md",
  "_id": "postcss-load-options@1.0.2",
  "_from": "postcss-load-options@^1.0.2"
}
